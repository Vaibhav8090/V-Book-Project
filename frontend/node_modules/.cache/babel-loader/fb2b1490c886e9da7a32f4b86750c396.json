{"ast":null,"code":"import axios from \"axios\";\nimport { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS } from \"../constants/orderconstants\";\nexport const CreateOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      token\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: token\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      token\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: token\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const payOrder = (orderId, paymentResult, userid) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      token\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: token\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/orders/${orderId}/pay?id=${userid}`, paymentResult, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n    const {\n      token\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: token\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/orders/myorders`, config);\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    });\n    const {\n      token\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: token\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/orders/`, config);\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_LIST_FAIL","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","CreateOrder","order","dispatch","getState","type","token","config","headers","Authorization","data","post","payload","error","response","message","getOrderDetails","id","get","payOrder","orderId","paymentResult","userid","put","listMyOrders","listOrders"],"sources":["C:/Users/asus/Desktop/V-Book/frontend/src/redux/actions/orderActions.js"],"sourcesContent":["import axios from \"axios\";\nimport {\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n} from \"../constants/orderconstants\";\n\nexport const CreateOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    });\n\n    const { token } = getState();\n\n    const config = {\n      headers: {\n        Authorization: token,\n      },\n    };\n\n    const { data } = await axios.post(`/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    });\n\n    const { token } = getState();\n\n    const config = {\n      headers: {\n        Authorization: token,\n      },\n    };\n\n    const { data } = await axios.get(`/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\nexport const payOrder =\n  (orderId, paymentResult, userid) => async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: ORDER_PAY_REQUEST,\n      });\n\n      const { token } = getState();\n\n      const config = {\n        headers: {\n          Authorization: token,\n        },\n      };\n\n      const { data } = await axios.put(\n        `/orders/${orderId}/pay?id=${userid}`,\n        paymentResult,\n        config\n      );\n      dispatch({\n        type: ORDER_PAY_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: ORDER_PAY_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n    });\n\n    const { token } = getState();\n\n    const config = {\n      headers: {\n        Authorization: token,\n      },\n    };\n\n    const { data } = await axios.get(`/orders/myorders`, config);\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    });\n\n    const { token } = getState();\n\n    const config = {\n      headers: {\n        Authorization: token,\n      },\n    };\n\n    const { data } = await axios.get(`/orders/`, config);\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,iBAAiB,EACjBC,oBAAoB,EACpBC,oBAAoB,EACpBC,kBAAkB,EAClBC,qBAAqB,EACrBC,qBAAqB,EACrBC,eAAe,EACfC,kBAAkB,EAClBC,qBAAqB,EACrBC,qBAAqB,EACrBC,kBAAkB,EAClBC,kBAAkB,EAClBC,cAAc,EACdC,iBAAiB,EACjBC,iBAAiB,QACZ,6BAA6B;AAEpC,OAAO,MAAMC,WAAW,GAAIC,KAAK,IAAK,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAClE,IAAI;IACFD,QAAQ,CAAC;MACPE,IAAI,EAAElB;IACR,CAAC,CAAC;IAEF,MAAM;MAAEmB;IAAM,CAAC,GAAGF,QAAQ,EAAE;IAE5B,MAAMG,MAAM,GAAG;MACbC,OAAO,EAAE;QACPC,aAAa,EAAEH;MACjB;IACF,CAAC;IAED,MAAM;MAAEI;IAAK,CAAC,GAAG,MAAMzB,KAAK,CAAC0B,IAAI,CAAE,SAAQ,EAAET,KAAK,EAAEK,MAAM,CAAC;IAC3DJ,QAAQ,CAAC;MACPE,IAAI,EAAEjB,oBAAoB;MAC1BwB,OAAO,EAAEF;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdV,QAAQ,CAAC;MACPE,IAAI,EAAEnB,iBAAiB;MACvB0B,OAAO,EACLC,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,GACzCF,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,GAC3BF,KAAK,CAACE;IACd,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMC,eAAe,GAAIC,EAAE,IAAK,OAAOd,QAAQ,EAAEC,QAAQ,KAAK;EACnE,IAAI;IACFD,QAAQ,CAAC;MACPE,IAAI,EAAEf;IACR,CAAC,CAAC;IAEF,MAAM;MAAEgB;IAAM,CAAC,GAAGF,QAAQ,EAAE;IAE5B,MAAMG,MAAM,GAAG;MACbC,OAAO,EAAE;QACPC,aAAa,EAAEH;MACjB;IACF,CAAC;IAED,MAAM;MAAEI;IAAK,CAAC,GAAG,MAAMzB,KAAK,CAACiC,GAAG,CAAE,WAAUD,EAAG,EAAC,EAAEV,MAAM,CAAC;IACzDJ,QAAQ,CAAC;MACPE,IAAI,EAAEd,qBAAqB;MAC3BqB,OAAO,EAAEF;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdV,QAAQ,CAAC;MACPE,IAAI,EAAEhB,kBAAkB;MACxBuB,OAAO,EACLC,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,GACzCF,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,GAC3BF,KAAK,CAACE;IACd,CAAC,CAAC;EACJ;AACF,CAAC;AACD,OAAO,MAAMI,QAAQ,GACnB,CAACC,OAAO,EAAEC,aAAa,EAAEC,MAAM,KAAK,OAAOnB,QAAQ,EAAEC,QAAQ,KAAK;EAChE,IAAI;IACFD,QAAQ,CAAC;MACPE,IAAI,EAAEN;IACR,CAAC,CAAC;IAEF,MAAM;MAAEO;IAAM,CAAC,GAAGF,QAAQ,EAAE;IAE5B,MAAMG,MAAM,GAAG;MACbC,OAAO,EAAE;QACPC,aAAa,EAAEH;MACjB;IACF,CAAC;IAED,MAAM;MAAEI;IAAK,CAAC,GAAG,MAAMzB,KAAK,CAACsC,GAAG,CAC7B,WAAUH,OAAQ,WAAUE,MAAO,EAAC,EACrCD,aAAa,EACbd,MAAM,CACP;IACDJ,QAAQ,CAAC;MACPE,IAAI,EAAEL,iBAAiB;MACvBY,OAAO,EAAEF;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdV,QAAQ,CAAC;MACPE,IAAI,EAAEP,cAAc;MACpBc,OAAO,EACLC,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,GACzCF,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,GAC3BF,KAAK,CAACE;IACd,CAAC,CAAC;EACJ;AACF,CAAC;AAEH,OAAO,MAAMS,YAAY,GAAG,MAAM,OAAOrB,QAAQ,EAAEC,QAAQ,KAAK;EAC9D,IAAI;IACFD,QAAQ,CAAC;MACPE,IAAI,EAAEX;IACR,CAAC,CAAC;IAEF,MAAM;MAAEY;IAAM,CAAC,GAAGF,QAAQ,EAAE;IAE5B,MAAMG,MAAM,GAAG;MACbC,OAAO,EAAE;QACPC,aAAa,EAAEH;MACjB;IACF,CAAC;IAED,MAAM;MAAEI;IAAK,CAAC,GAAG,MAAMzB,KAAK,CAACiC,GAAG,CAAE,kBAAiB,EAAEX,MAAM,CAAC;IAC5DJ,QAAQ,CAAC;MACPE,IAAI,EAAEV,qBAAqB;MAC3BiB,OAAO,EAAEF;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdV,QAAQ,CAAC;MACPE,IAAI,EAAEZ,kBAAkB;MACxBmB,OAAO,EACLC,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,GACzCF,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,GAC3BF,KAAK,CAACE;IACd,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMU,UAAU,GAAG,MAAM,OAAOtB,QAAQ,EAAEC,QAAQ,KAAK;EAC5D,IAAI;IACFD,QAAQ,CAAC;MACPE,IAAI,EAAET;IACR,CAAC,CAAC;IAEF,MAAM;MAAEU;IAAM,CAAC,GAAGF,QAAQ,EAAE;IAE5B,MAAMG,MAAM,GAAG;MACbC,OAAO,EAAE;QACPC,aAAa,EAAEH;MACjB;IACF,CAAC;IAED,MAAM;MAAEI;IAAK,CAAC,GAAG,MAAMzB,KAAK,CAACiC,GAAG,CAAE,UAAS,EAAEX,MAAM,CAAC;IACpDJ,QAAQ,CAAC;MACPE,IAAI,EAAER,kBAAkB;MACxBe,OAAO,EAAEF;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdV,QAAQ,CAAC;MACPE,IAAI,EAAEb,eAAe;MACrBoB,OAAO,EACLC,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,GACzCF,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,GAC3BF,KAAK,CAACE;IACd,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module"}